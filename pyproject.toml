[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "open-skills"
version = "0.2.0"
description = "Framework-agnostic skills subsystem for Python AI agents - embed directly or deploy as a service"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Richard Scheiwe"}
]
maintainers = [
    {name = "Richard Scheiwe"}
]
keywords = [
    "ai", "agent", "agents", "skills", "llm", "openai", "anthropic",
    "langchain", "tools", "function-calling", "fastapi", "async",
    "plugin-system", "automation", "versioning", "embeddings"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
    "Typing :: Typed",
]

dependencies = [
    # Core
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",

    # Database
    "sqlalchemy>=2.0.25",
    "asyncpg>=0.29.0",
    "alembic>=1.13.0",
    "pgvector>=0.2.4",

    # HTTP & API
    "httpx>=0.26.0",
    "python-multipart>=0.0.6",

    # Security & Crypto
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",

    # CLI
    "click>=8.1.7",
    "rich>=13.7.0",

    # Utilities
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",

    # Streaming
    "sse-starlette>=2.0.0",

    # Telemetry (stubbed)
    "structlog>=24.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "httpx>=0.26.0",
]

langfuse = [
    "langfuse>=2.0.0",
]

s3 = [
    "boto3>=1.34.0",
]

all = [
    "open-skills[dev,langfuse,s3]",
]

[project.scripts]
open-skills = "open_skills.cli.main:cli"

[project.urls]
Homepage = "https://github.com/rscheiwe/open-skills"
Documentation = "https://github.com/rscheiwe/open-skills#readme"
Repository = "https://github.com/rscheiwe/open-skills"
"Bug Tracker" = "https://github.com/rscheiwe/open-skills/issues"
Changelog = "https://github.com/rscheiwe/open-skills/blob/main/CHANGELOG.md"
"Source Code" = "https://github.com/rscheiwe/open-skills"

[tool.setuptools.packages.find]
where = ["."]
include = ["open_skills*"]
exclude = ["tests*", "examples*", "web*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = "-v --tb=short --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.coverage.run]
source = ["open_skills"]
omit = [
    "*/tests/*",
    "*/migrations/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
